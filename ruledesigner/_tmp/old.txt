		$(_objField).droppable({
			drop : function(event, ui) {
				$(this)
				console.log(ui)
				alert(ui);
			}
		});

		$('#btnAddRule').click(function(e) {
			_controller.addNewRule();
		});

		$('#btnNew').click(function(e) {
			$('input[name="txtMakro"]').removeAttr('disabled');
		});

		$('#inputLoad').click(function(e) {
			if (_controller.loadRule()) {
				// TODO -Resetting the GUI
				$('input[name="txtMakro"]').attr('disabled', 'disabled');
			}
		});

		$('#btnLoad').click(function(e) {
			$("#inputLoad").trigger('click');
			return false;
		});

		$('#btnSave').click(function(e) {
			if (_controller.saveRule()) {
				$('input[name="txtMakro"]').attr('disabled', 'disabled');
			}
		});

		$('#btnSaveAs').click(function(e) {
			if (_controller.saveAsRule()) {
				$('input[name="txtMakro"]').attr('disabled', 'disabled');
			}
		});

		$("#rd_toolbar a, #rd_toolbar button").button()

		// TODO - Schliesse TABs
		/*
		 * $('#rd_rules').delegate( "span.ui-icon-close", "click", function() {
		 * $(this) var ID = $( this ).closest( "li" ).remove().attr(
		 * "aria-controls" ); var UNIQUE_ID = $( '#' + ID
		 * ).remove().attr("rel"); $('rd_rules').tabs( "refresh" ); });
		 */

		$('#imgTrash').droppable({
			tolerance : "touch",
			drop : function(event, ui) {
				obj = ui.draggable;
				if (obj.attr("aria-controls") !== undefined) { // Drop Rule Tab
					var ID = obj.attr("aria-controls");
					obj._RULE_ID = $('#' + ID).remove().attr("rel");
				} else if ($(obj).parent().attr("rel") !== undefined) { // Drop
					// Rule
					// Elements
					console.log($(obj));
					obj._UNIQUE_ID = $(obj).attr("rel");
					obj._RULE_ID = $(obj).parent().attr("rel");
				}
				ui.draggable.remove();
				_controller.doEventAction("drop.trash", obj, event);

			}
		});
		
		$( document ).tooltip();



/**
 * Events
 */
/*
 * this.events = function() {
 * 
 * return this.events; };
 * 
 * this.allowDrop = function(ev) { ev.preventDefault(); };
 * 
 * this.drag = function(ev) { ev.dataTransfer.effectAllowed = 'move';
 * ev.dataTransfer.setData("Text", ev.target.id); };
 * 
 * this.drop = function(ev) { ev.preventDefault();
 * 
 */

/**
 * Old placeolders
 */
//
// var setConnector = function(_class, _rel) {
// var c = document.createElement('span');
// $(c).attr('rel', _rel);
// $(c).addClass('connector');
// $(c).addClass(_class);
// return c;
// };
//
// var buildPlaceholder = function(bool, _RULE_ID) {
//
// var box = document.createElement('div');
// $(box).addClass('rule-obj-box');
//
// console.log(arguments);
// if (bool) {
// $(box).append(
// setConnector('connector-left', _RULE_ID + '.actor'));
// $(box).attr('rel', _RULE_ID + '.actor');
// } else {
// $(box).append(
// setConnector('connector-right', _RULE_ID + '.sensor'));
// $(box).attr('rel', _RULE_ID + '.sensor');
// }
//
// var title = document.createElement('span');
// $(title).addClass('title');
// title.innerHTML = 'Placeholder';
// $(box).append(title);
//
// $(box).addClass('placeholder');
// $(box).append(
// '<p>This object will remove when first '
// + (bool ? 'actor' : 'sensor') + ' is dropped.</p>');
// return box;
// };
//
// var buildBox = function(_title, _obj) {
// var box = document.createElement('div');
// $(box).addClass('rule-obj-box');
//
// console.log(arguments);
// var _rel = ((arguments[2] !== undefined && arguments[2] != null) ?
// arguments[2]
// + '.'
// : '')
// + _obj.getUID()
// $(box).attr('rel', _rel);
//
// $(box).append(setConnector('connector-left', _rel + '.prev'));
// $(box).append(setConnector('connector-right', _rel + '.follow'));
// $(box).append(setConnector('connector-top', _rel + '.up'));
// $(box).append(setConnector('connector-bottom', _rel + '.down'));
//
// var title = document.createElement('span');
// $(title).addClass('title');
// title.innerHTML = _title;
// $(box).append(title);
// return box;
// };
